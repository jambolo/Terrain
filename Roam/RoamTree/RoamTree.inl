/** @file *//********************************************************************************************************

                                                     RoamTree.inl

						                    Copyright 2003, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Terrain/Roam/RoamTree/RoamTree.inl#2 $

	$NoKeywords: $

*********************************************************************************************************************/

#pragma once

#include "RoamTree.h"

#include <d3dx9.h>


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline void RoamTree::Triangle::SetBottomNeighbor( RoamTree::Node * pBottomNeighbor )
{
	m_pBottomNeighbor = pBottomNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline RoamTree::Node * RoamTree::Triangle::BottomNeighbor()
{
	return m_pBottomNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline RoamTree::Node const * RoamTree::Triangle::BottomNeighbor() const
{
	return m_pBottomNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline void RoamTree::Triangle::SetLeftNeighbor( RoamTree::Node * pLeftNeighbor )
{
	m_pLeftNeighbor = pLeftNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline RoamTree::Node * RoamTree::Triangle::LeftNeighbor()
{
	return m_pLeftNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline RoamTree::Node const * RoamTree::Triangle::LeftNeighbor() const
{
	return m_pLeftNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline void RoamTree::Triangle::SetRightNeighbor( RoamTree::Node * pRightNeighbor )
{
	m_pRightNeighbor = pRightNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline RoamTree::Node * RoamTree::Triangle::RightNeighbor()
{
	return m_pRightNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline RoamTree::Node const * RoamTree::Triangle::RightNeighbor() const
{
	return m_pRightNeighbor;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline DataTree::Node const *	RoamTree::Triangle::GetData() const
{
	return m_pData;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline GridTriangle const &	RoamTree::Triangle::GetGridTriangle() const
{
	return m_pData->m_data.gt;
}


/********************************************************************************************************************/
/*																													*/
/********************************************************************************************************************/

inline D3DXVECTOR3 const & RoamTree::Triangle::GetNormal() const
{
	return m_pData->m_data.normal;
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

inline float RoamTree::Triangle::GetMaxVariance() const
{
	return m_pData->m_data.maxVariance;
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

inline void const * RoamTree::Triangle::GetV0() const
{
	return m_pData->m_data.pV0;
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

inline void const * RoamTree::Triangle::GetV1() const
{
	return m_pData->m_data.pV1;
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

inline void const * RoamTree::Triangle::GetV2() const
{
	return m_pData->m_data.pV2;
}
